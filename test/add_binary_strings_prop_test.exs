defmodule AddBinaryStringsPropTest do
  use ExUnit.Case, async: true
  use ExUnitProperties
  alias AddBinaryStrings, as: ABS

  @base 2

  # Simple example
  #  property "2 sets of bits in string add properly" do
  #    check all int1 <- integer(0..1),
  #              int2 <- integer(0..1) do
  #      IO.puts("test: #{inspect(int1)}, #{inspect(int2)}")

  # Addition is commutative!
  #      assert int1 + int2 == int2 + int1
  #    end
  #  end

  _ = """

  Results for first below property check

  given two binary strings: 1, 0, sum = 1
  given two binary strings: 1, 10, sum = 11
  given two binary strings: 001, 110, sum = 111
  given two binary strings: 0, 0011, sum = 11
  given two binary strings: 11, 11000, sum = 11011
  given two binary strings: 101, 101, sum = 1010
  given two binary strings: 010010, 111000, sum = 1001010
  given two binary strings: 1000001, 1, sum = 1000010
  given two binary strings: 0, 0, sum = 0
  given two binary strings: 100011101, 10, sum = 100011111
  given two binary strings: 10, 01010001011, sum = 1010001101
  given two binary strings: 1, 01, sum = 10
  given two binary strings: 10111010, 0010010010, sum = 101001100
  given two binary strings: 0000100011100, 1100, sum = 100101000
  given two binary strings: 00, 11, sum = 11
  given two binary strings: 0011000010000, 00111100, sum = 11001001100
  given two binary strings: 11, 0000100, sum = 111
  given two binary strings: 0100000101, 1001001, sum = 101001110
  given two binary strings: 00, 110110001101, sum = 110110001101
  given two binary strings: 100, 010001, sum = 10101
  given two binary strings: 000011000011100111101, 0, sum = 11000011100111101
  given two binary strings: 01100111010110010110, 010010, sum = 1100111010110101000
  given two binary strings: 1111111111101101000, 1101011, sum = 1111111111111010011
  given two binary strings: 0010101111011101100, 01011000110001010111010, sum = 1011011100000110100110
  given two binary strings: 0100100000, 1, sum = 100100001
  given two binary strings: 11111010110110110, 01011101010111, sum = 100000110100001101
  given two binary strings: 1001001011111010110, 1010, sum = 1001001011111100000
  given two binary strings: 1000011111011101100101110011, 1010011110100111, sum = 1000011111101000000100011010
  given two binary strings: 01110011000001101001111100101, 011011, sum = 1110011000001101010000000000
  given two binary strings: 010001010110111011010001111, 10111010, sum = 10001010110111011101001001
  given two binary strings: 1000000100111, 10010100010011111, sum = 10011100011000110
  given two binary strings: 11010, 1011001101111011100110000, sum = 1011001101111011101001010
  given two binary strings: 10000100100111011001000, 11100011110, sum = 10000100101010111100110
  given two binary strings: 010011000101011001111000100, 00100111110101111000000001010, sum = 111010111011010001111001110
  given two binary strings: 0010010000100101110001110, 01, sum = 10010000100101110001111
  given two binary strings: 10001101110, 11100, sum = 10010001010
  given two binary strings: 0100101100110100100, 10100000101, sum = 100101111010101001
  given two binary strings: 00, 0, sum = 0
  given two binary strings: 01001, 1111010011110100111100001101, sum = 1111010011110100111100010110
  given two binary strings: 0000110010111010011100, 010100011000111011, sum = 1000111010011010111
  given two binary strings: 01111110101, 000, sum = 1111110101
  given two binary strings: 10110001001100, 011010101011110011000001101111001001001001, sum = 11010101011110011000001110001111010010101
  given two binary strings: 1010011, 0010110, sum = 1101001
  given two binary strings: 1, 0110111100, sum = 110111101
  given two binary strings: 11011000111010111100000110111100110, 100011001000101, sum = 11011000111010111100101010000101011
  given two binary strings: 01011110011011101010100011110000011111, 10100010101100100001, sum = 1011110011011101101000110011101000000
  given two binary strings: 1100110001001100111101010000110010001101001010, 001110110010010, sum = 1100110001001100111101010000110100000011011100
  given two binary strings: 110010110110000110, 10000100010, sum = 110011000110101000
  given two binary strings: 0011110011111000010010101010, 10111001010000010100110110011, sum = 11010111101111010111001011101
  given two binary strings: 01011101000000111110111011111010, 011100100, sum = 1011101000000111110111111011110
  given two binary strings: 01101010100110110000010110110111100001, 1110110001011011010000011, sum = 1101010101000100110100010010001100100
  given two binary strings: 0100011100100011101100101011101111000000, 0110111010010011000101000000011110101000001001100, sum = 110111010110110101001011110000100000110000001100
  given two binary strings: 1000010101, 11111, sum = 1000110100
  given two binary strings: 0011000111011010011011101, 1011011100011111010111011001110101, sum = 1011011100111000010010101101010010
  given two binary strings: 10000001100001010000111011110100101111111100, 1011100011101000, sum = 10000001100001010000111100000000010011100100
  given two binary strings: 11111001101110000110111010101100100011010, 0101110111111011010100110011001001111, sum = 11111111100110000010001111011111101101001
  given two binary strings: 01011000000000110110, 011111111101101010100110100011, sum = 11111111111000010100111011001
  given two binary strings: 101001110001110001111001011001100001101, 100010001111001110011011101010, sum = 101001110110000011110011001100111110111
  given two binary strings: 11110110110101000101101111000, 01100011000111101101110010100000100101101100, sum = 1100011001000001100101001001001010011100100
  given two binary strings: 00101110111001111, 0101100010010001010010110001011111011010010011010, sum = 101100010010001010010110001100000001001001101001
  given two binary strings: 000, 0111100110011000110111011010010101111010011001, sum = 111100110011000110111011010010101111010011001
  given two binary strings: 001101010110100000011100111100010001101101010011000, 1011010110011001111, sum = 1101010110100000011100111100011101000011101100111
  given two binary strings: 1000011110101101001110101010110010, 0010011011011011001100010110101, sum = 1000110010001000101000001101100111
  given two binary strings: 01001011111011110110111011110110, 1011110111000010000111000010, sum = 1010111110010111001000010111000
  given two binary strings: 10100101000000010100001001111100101010011010101011100110111100010, 100101110111101100011111111000, sum = 10100101000000010100001001111100101111001001101001001010111011010
  given two binary strings: 000110011101101010001101110101111, 11110000110011110001110110110100000110, sum = 11110001100111011111001000100010110101
  given two binary strings: 010001110011001110100111100110, 01011110101011100001000, sum = 10001111111000100000011101110
  given two binary strings: 1000001111101010011010000010001011010, 0010101100110000100101111011101001011, sum = 1010111100011010111111111101110100101
  given two binary strings: 10001111010110010110010101010010001101, 01001011000001000110010101001101100011001011101111, sum = 1001011000011010101101011100011111000011101111100
  given two binary strings: 010000011101011011011111011011101010101010110100, 0101100010010011111011100111101000100100110010100110001000000, sum = 101100010010101111111010011000100100000001111111011011110100
  given two binary strings: 01111010000101000010111011011101111011, 10110001110111110000100100110000010000101000, sum = 10110011110001110101100111101011101110100011
  given two binary strings: 0010101110110110100011, 01000001100101110100100001100101100100001010000110010, sum = 1000001100101110100100001100101111010000000111010101
  given two binary strings: 100001101101000001000100010011011111100001110100111011110101010, 011101110101110001111111010111010010110010, sum = 100001101101000001001000000010001101110001101111110110001011100
  given two binary strings: 10001101010110110011000011010101110110110110101011, 01010001001111000001110011001001110010111111, sum = 10001110101000000010000101001001000000101001101010
  given two binary strings: 101101100000100011001001000011101101001100101100, 1000100011101111101011010101100100110110010, sum = 101110100101000001000110011110011001110011011110
  given two binary strings: 010100101100110001100011111001101101100110001001111100010010101, 0110110100000001101001111001011010111011101001001111000111011011111110100011, sum = 110110100000100001111011111100111011010110110111011111000101011100000111000
  given two binary strings: 00011111101000111110001100010001101010011111101, 10011110011011000101000000000011001110101, sum = 100010000111011001010001010001101101101110010
  given two binary strings: 100, 010001001011001101100010010011001, sum = 10001001011001101100010010011101
  given two binary strings: 11, 1101001110001000100000110111100010011111001001111, sum = 1101001110001000100000110111100010011111001010010
  given two binary strings: 10010101110001010110100000010001111110110011001001000101110000111000000100011, 100011110001, sum = 10010101110001010110100000010001111110110011001001000101110000111100100010100
  given two binary strings: 010100101011010, 1010011010111010010001100101100100110001011010100011000000, sum = 1010011010111010010001100101100100110001011101001000011010
  given two binary strings: 01111, 001010111001011110100010100000010001010001010001110000001110010, sum = 1010111001011110100010100000010001010001010001110000010000001
  given two binary strings: 00011000110100111000000, 110110000100100001010101010100, sum = 110110000111100111111100010100
  given two binary strings: 01110111100101010011100000100010, 00000000100100101011110110110110110, sum = 1111100001010110010010111011000
  given two binary strings: 101001111011001101011111100101101010, 110111010110010111010010001101010100101000010010010100100000, sum = 110111010110010111010010110111001111110101110001111010001010
  given two binary strings: 01001110001001010010001011101000100000100010101010001111100100111001011101110011110, 001111100, sum = 1001110001001010010001011101000100000100010101010001111100100111001011110000011010
  given two binary strings: 10, 1010101, sum = 1010111
  given two binary strings: 10010010111000101000000100011010100101011101001010111111011111000100000001011111001001, 0110011100010111110, sum = 10010010111000101000000100011010100101011101001010111111011111000100110101000010000111
  given two binary strings: 010101010, 111000011110100001011110001100100010100010100100001110110010100100111101, sum = 111000011110100001011110001100100010100010100100001110110010100111100111
  given two binary strings: 110100001111101001000101111001100010011100011000111011101111001000011, 10000101100010100010100000110000110111010011111001101100111111111110000010010001001000001, sum = 10000101100010100011010101000000100000011001110011001111011100010110111110000000010000100
  given two binary strings: 0110100010101000000010010101111100111101111011111010101011101010110000, 01101011111011011011110011, sum = 110100010101000000010010101111100111101111101100110100111000110100011
  given two binary strings: 11100111111101000010111001110000101111011101, 10101100011110000010001011111110011, sum = 11101000010010100110101010000010001111010000
  given two binary strings: 1010111101010100011000010001110110111011110111000000011110110100001001111011, 00010111001110010010001010, sum = 1010111101010100011000010001110110111011110111000000110110000010011100000101
  given two binary strings: 111011001101101010110000111001010100100110010101000111001111110111000, 0100000100111011000100001010000100000011011110001010110110010000100101000100010001110, sum = 100000100111011111111010111101110110100010111011111011100100101101100010100001000110
  given two binary strings: 0111111101101111101110001101001010000010011001000111001001000110110000, 10010100100000110000000010100010100101100100000011101100, sum = 111111101110010000010101101111010000100111011101100101101001010011100
  given two binary strings: 01, 10110011100000000110001000101010, sum = 10110011100000000110001000101011
  given two binary strings: 10101100011001101101010011000001111001001111001101010110111111010001100000, 1111111110101000101111010111000100001010011110111011000001001000111011100010111011110000111001, sum = 1111111110101000110010000011011101110111110001111100111010011000001000111001111011000010011001
  given two binary strings: 10111000001110001000010100111001000111010101001101010000000000000100110000010111111, 111000010010, sum = 10111000001110001000010100111001000111010101001101010000000000000100110111011010001
  given two binary strings: 001111100010011001101010010111011110110011111101000011110011110001001100000011, 111010, sum = 1111100010011001101010010111011110110011111101000011110011110001001100111101
  given two binary strings: 0011100011010100111100110011000101111100001010010000011110001011011010011000000110, 000000001111111110110111100000010001001100011011101010110011011011111110000, sum = 11100011010110111100101010000001111110010011110011111011100001110101110111110110
  .
  """

  property "verify adding two binary strings creates the proper sum" do
    # Define the custom generator the builds "binary" strings of length >= 1
    base2_string_generator =
      StreamData.bind(StreamData.list_of(StreamData.integer(0..1), min_length: 1), fn list ->
        StreamData.constant(Enum.join(list))
      end)

    # Iterate through all the proper combinations
    check all str1 <- base2_string_generator,
              str2 <- base2_string_generator do
      # Compute a reference value check
      reference_sum = add_check(str1, str2)

      test_sum = ABS.add(str1, str2)

      # Display for fun
      # IO.puts("given two binary strings: #{str1}, #{str2}, sum = #{test_sum}")

      # Assert!
      assert reference_sum == test_sum
    end
  end

  property "ensure shrink properly eliminates leading 0s" do
    # Define the custom generate that builds only "0" strings of length >= 1
    zero_string_generator =
      StreamData.bind(StreamData.list_of(StreamData.integer(0..0), min_length: 1), fn list ->
        StreamData.constant(Enum.join(list))
      end)

    # Define the custom generator the builds "binary" strings of length >= 1
    base2_string_generator =
      StreamData.bind(StreamData.list_of(StreamData.integer(0..1), min_length: 1), fn list ->
        StreamData.constant(Enum.join(list))
      end)

    # Iterate through all the proper combinations
    check all str1 <- zero_string_generator,
              str2 <- base2_string_generator do
      # concat the two strings with the zeros first
      concat_str = str1 <> str2

      # run the shrink
      shrinked = ABS.shrink(concat_str)

      # verify
      assert shrinked == shrink_check(concat_str)
    end
  end

  # Verify helper functions
  def add_check(x, y) when is_binary(x) and is_binary(y) do
    val_x = String.to_integer(x, @base)
    val_y = String.to_integer(y, @base)

    Integer.to_string(val_x + val_y, @base)
  end

  def shrink_check(x) when is_binary(x) do
    val = String.to_integer(x, @base)

    Integer.to_string(val, @base)
  end
end
